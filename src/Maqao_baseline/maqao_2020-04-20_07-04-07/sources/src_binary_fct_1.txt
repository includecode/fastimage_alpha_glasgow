/home/pavel/Documents/COURS/IATIC_4/AOB/fastimage_alpha_glasgow/src//invert_unrolled.c: 30 - 179
--------------------------------------------------------------------------------

30: {
31:   u64 end1 = 691200; //one Frame size / 4
32:   u64 end2 = 1382400;
33:   u64 end3 = 2073600;
34:   u64 end4 = 2764800;
35:   for (unsigned x = 0; x < end1; x += 32)
36:   {
37:     //Invert each colour component of every pixel
38:     frame[x] = ~frame[x];           //Red
39:     frame[x + 1] = ~frame[x + 1];   //Green
40:     frame[x + 2] = ~frame[x + 2];   //Blue
41:     frame[x + 3] = ~frame[x + 3];   //Red
42:     frame[x + 4] = ~frame[x + 4];   //Green
43:     frame[x + 5] = ~frame[x + 5];   //Blue
44:     frame[x + 6] = ~frame[x + 6];   //Red
45:     frame[x + 7] = ~frame[x + 7];   //Green
46:     frame[x + 8] = ~frame[x + 8];   //Blue
47:     frame[x + 9] = ~frame[x + 9];   //Red
48:     frame[x + 10] = ~frame[x + 10]; //Green
49:     frame[x + 11] = ~frame[x + 11]; //Blue
50:     frame[x + 12] = ~frame[x + 12]; //Red
51:     frame[x + 13] = ~frame[x + 13]; //Green
52:     frame[x + 14] = ~frame[x + 14]; //Blue
53:     frame[x + 15] = ~frame[x + 15]; //Red
54:     frame[x + 16] = ~frame[x + 16]; //Green
55:     frame[x + 17] = ~frame[x + 17]; //Blue
56:     frame[x + 18] = ~frame[x + 18]; //Red
57:     frame[x + 19] = ~frame[x + 19]; //Green
58:     frame[x + 20] = ~frame[x + 20]; //Blue
59:     frame[x + 21] = ~frame[x + 21]; //Red
60:     frame[x + 22] = ~frame[x + 22]; //Green
61:     frame[x + 23] = ~frame[x + 23]; //Blue
62:     frame[x + 24] = ~frame[x + 24]; //Red
63:     frame[x + 25] = ~frame[x + 25]; //Green
64:     frame[x + 26] = ~frame[x + 26]; //Blue
65:     frame[x + 27] = ~frame[x + 27]; //Red
66:     frame[x + 28] = ~frame[x + 28]; //Green
67:     frame[x + 29] = ~frame[x + 29]; //Blue
68:     frame[x + 30] = ~frame[x + 30]; //Red
69:     frame[x + 31] = ~frame[x + 31]; //Green
70:   }
71:   for (unsigned x = end1; x < end2; x += 32)
72:   {
73:     //Invert each colour component of every pixel
74:     frame[x] = ~frame[x];           //Red
75:     frame[x + 1] = ~frame[x + 1];   //Green
76:     frame[x + 2] = ~frame[x + 2];   //Blue
77:     frame[x + 3] = ~frame[x + 3];   //Red
78:     frame[x + 4] = ~frame[x + 4];   //Green
79:     frame[x + 5] = ~frame[x + 5];   //Blue
80:     frame[x + 6] = ~frame[x + 6];   //Red
81:     frame[x + 7] = ~frame[x + 7];   //Green
82:     frame[x + 8] = ~frame[x + 8];   //Blue
83:     frame[x + 9] = ~frame[x + 9];   //Red
84:     frame[x + 10] = ~frame[x + 10]; //Green
85:     frame[x + 11] = ~frame[x + 11]; //Blue
86:     frame[x + 12] = ~frame[x + 12]; //Red
87:     frame[x + 13] = ~frame[x + 13]; //Green
88:     frame[x + 14] = ~frame[x + 14]; //Blue
89:     frame[x + 15] = ~frame[x + 15]; //Red
90:     frame[x + 16] = ~frame[x + 16]; //Green
91:     frame[x + 17] = ~frame[x + 17]; //Blue
92:     frame[x + 18] = ~frame[x + 18]; //Red
93:     frame[x + 19] = ~frame[x + 19]; //Green
94:     frame[x + 20] = ~frame[x + 20]; //Blue
95:     frame[x + 21] = ~frame[x + 21]; //Red
96:     frame[x + 22] = ~frame[x + 22]; //Green
97:     frame[x + 23] = ~frame[x + 23]; //Blue
98:     frame[x + 24] = ~frame[x + 24]; //Red
99:     frame[x + 25] = ~frame[x + 25]; //Green
100:     frame[x + 26] = ~frame[x + 26]; //Blue
101:     frame[x + 27] = ~frame[x + 27]; //Red
102:     frame[x + 28] = ~frame[x + 28]; //Green
103:     frame[x + 29] = ~frame[x + 29]; //Blue
104:     frame[x + 30] = ~frame[x + 30]; //Red
105:     frame[x + 31] = ~frame[x + 31]; //Green
106:   }
107:   for (unsigned x = end2; x < end3; x += 32)
108:   {
109:     //Invert each colour component of every pixel
110:     frame[x] = ~frame[x];           //Red
111:     frame[x + 1] = ~frame[x + 1];   //Green
112:     frame[x + 2] = ~frame[x + 2];   //Blue
113:     frame[x + 3] = ~frame[x + 3];   //Red
114:     frame[x + 4] = ~frame[x + 4];   //Green
115:     frame[x + 5] = ~frame[x + 5];   //Blue
116:     frame[x + 6] = ~frame[x + 6];   //Red
117:     frame[x + 7] = ~frame[x + 7];   //Green
118:     frame[x + 8] = ~frame[x + 8];   //Blue
119:     frame[x + 9] = ~frame[x + 9];   //Red
120:     frame[x + 10] = ~frame[x + 10]; //Green
121:     frame[x + 11] = ~frame[x + 11]; //Blue
122:     frame[x + 12] = ~frame[x + 12]; //Red
123:     frame[x + 13] = ~frame[x + 13]; //Green
124:     frame[x + 14] = ~frame[x + 14]; //Blue
125:     frame[x + 15] = ~frame[x + 15]; //Red
126:     frame[x + 16] = ~frame[x + 16]; //Green
127:     frame[x + 17] = ~frame[x + 17]; //Blue
128:     frame[x + 18] = ~frame[x + 18]; //Red
129:     frame[x + 19] = ~frame[x + 19]; //Green
130:     frame[x + 20] = ~frame[x + 20]; //Blue
131:     frame[x + 21] = ~frame[x + 21]; //Red
132:     frame[x + 22] = ~frame[x + 22]; //Green
133:     frame[x + 23] = ~frame[x + 23]; //Blue
134:     frame[x + 24] = ~frame[x + 24]; //Red
135:     frame[x + 25] = ~frame[x + 25]; //Green
136:     frame[x + 26] = ~frame[x + 26]; //Blue
137:     frame[x + 27] = ~frame[x + 27]; //Red
138:     frame[x + 28] = ~frame[x + 28]; //Green
139:     frame[x + 29] = ~frame[x + 29]; //Blue
140:     frame[x + 30] = ~frame[x + 30]; //Red
141:     frame[x + 31] = ~frame[x + 31]; //Green
142:   }
143:   for (unsigned x = end3; x < end4; x += 32)
144:   {
145:     //Invert each colour component of every pixel
146:     frame[x] = ~frame[x];           //Red
147:     frame[x + 1] = ~frame[x + 1];   //Green
148:     frame[x + 2] = ~frame[x + 2];   //Blue
149:     frame[x + 3] = ~frame[x + 3];   //Red
150:     frame[x + 4] = ~frame[x + 4];   //Green
151:     frame[x + 5] = ~frame[x + 5];   //Blue
152:     frame[x + 6] = ~frame[x + 6];   //Red
153:     frame[x + 7] = ~frame[x + 7];   //Green
154:     frame[x + 8] = ~frame[x + 8];   //Blue
155:     frame[x + 9] = ~frame[x + 9];   //Red
156:     frame[x + 10] = ~frame[x + 10]; //Green
157:     frame[x + 11] = ~frame[x + 11]; //Blue
158:     frame[x + 12] = ~frame[x + 12]; //Red
159:     frame[x + 13] = ~frame[x + 13]; //Green
160:     frame[x + 14] = ~frame[x + 14]; //Blue
161:     frame[x + 15] = ~frame[x + 15]; //Red
162:     frame[x + 16] = ~frame[x + 16]; //Green
163:     frame[x + 17] = ~frame[x + 17]; //Blue
164:     frame[x + 18] = ~frame[x + 18]; //Red
165:     frame[x + 19] = ~frame[x + 19]; //Green
166:     frame[x + 20] = ~frame[x + 20]; //Blue
167:     frame[x + 21] = ~frame[x + 21]; //Red
168:     frame[x + 22] = ~frame[x + 22]; //Green
169:     frame[x + 23] = ~frame[x + 23]; //Blue
170:     frame[x + 24] = ~frame[x + 24]; //Red
171:     frame[x + 25] = ~frame[x + 25]; //Green
172:     frame[x + 26] = ~frame[x + 26]; //Blue
173:     frame[x + 27] = ~frame[x + 27]; //Red
174:     frame[x + 28] = ~frame[x + 28]; //Green
175:     frame[x + 29] = ~frame[x + 29]; //Blue
176:     frame[x + 30] = ~frame[x + 30]; //Red
177:     frame[x + 31] = ~frame[x + 31]; //Green
178:   }
179: }
