/home/pavel/Documents/COURS/IATIC_4/AOB/fastimage_alpha_glasgow/src//invert_unrolled.c: 71 - 105
--------------------------------------------------------------------------------

71:   for (unsigned x = end1; x < end2; x += 32)
72:   {
73:     //Invert each colour component of every pixel
74:     frame[x] = ~frame[x];           //Red
75:     frame[x + 1] = ~frame[x + 1];   //Green
76:     frame[x + 2] = ~frame[x + 2];   //Blue
77:     frame[x + 3] = ~frame[x + 3];   //Red
78:     frame[x + 4] = ~frame[x + 4];   //Green
79:     frame[x + 5] = ~frame[x + 5];   //Blue
80:     frame[x + 6] = ~frame[x + 6];   //Red
81:     frame[x + 7] = ~frame[x + 7];   //Green
82:     frame[x + 8] = ~frame[x + 8];   //Blue
83:     frame[x + 9] = ~frame[x + 9];   //Red
84:     frame[x + 10] = ~frame[x + 10]; //Green
85:     frame[x + 11] = ~frame[x + 11]; //Blue
86:     frame[x + 12] = ~frame[x + 12]; //Red
87:     frame[x + 13] = ~frame[x + 13]; //Green
88:     frame[x + 14] = ~frame[x + 14]; //Blue
89:     frame[x + 15] = ~frame[x + 15]; //Red
90:     frame[x + 16] = ~frame[x + 16]; //Green
91:     frame[x + 17] = ~frame[x + 17]; //Blue
92:     frame[x + 18] = ~frame[x + 18]; //Red
93:     frame[x + 19] = ~frame[x + 19]; //Green
94:     frame[x + 20] = ~frame[x + 20]; //Blue
95:     frame[x + 21] = ~frame[x + 21]; //Red
96:     frame[x + 22] = ~frame[x + 22]; //Green
97:     frame[x + 23] = ~frame[x + 23]; //Blue
98:     frame[x + 24] = ~frame[x + 24]; //Red
99:     frame[x + 25] = ~frame[x + 25]; //Green
100:     frame[x + 26] = ~frame[x + 26]; //Blue
101:     frame[x + 27] = ~frame[x + 27]; //Red
102:     frame[x + 28] = ~frame[x + 28]; //Green
103:     frame[x + 29] = ~frame[x + 29]; //Blue
104:     frame[x + 30] = ~frame[x + 30]; //Red
105:     frame[x + 31] = ~frame[x + 31]; //Green
106:   }
107:   for (unsigned x = end2; x < end3; x += 32)
